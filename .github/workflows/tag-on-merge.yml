# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Tag on Merge

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  # push:
  #   branches:
  #     - main

env:
  CI: true

permissions: write-all

jobs:
  version_tag:
    if: github.event.pull_request.merged == true
    env:
      MAJOR_BUMP:
        ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
      MINOR_BUMP:
        ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
      PATCH_BUMP:
        ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
    strategy:
      matrix:
        node-version:
          - 20.7.0
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-tags: true
      - name: Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Bump major version and push tag
        if: contains(github.event.pull_request.labels.*.name, 'major')
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: major
      - name: Bump minor version and push tag
        if: contains(github.event.pull_request.labels.*.name, 'minor')
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: minor
      - name: Bump patch version and push tag
        if: contains(github.event.pull_request.labels.*.name, 'patch')
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
      - run:
          npm version --allow-same-version=true --git-tag-version=false $(git
          describe --tags)
      - name: Commit Package Version
        id: commit
        run: |
          exit_code=1
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [[ -n "$(git status --porcelain package.json)" ]]; then
            git add package.json
            git add package-lock.json
            git commit -m "[ci skip] chore(package.json): update package json"
            exit_code=0
          fi
          echo "exit_code=${exit_code}" >> "$GITHUB_OUTPUT"
      - name: Push to protected branch
        uses: CasperWA/push-protected@v2.15.0
        if: steps.commit.outputs.exit_code == 0
        with:
          token: ${{ secrets.GH_TOKEN }}
          branch: main
          force: true
          tags: true
          unprotect_reviews: true
